
export function isInTriangle (px: f32,py: f32, ax: f32, ay: f32, bx: f32, by: f32, cx: f32, cy: f32) : i32 {
  let v0x: f32 = cx-ax;
  let v0y: f32 = cy-ay;
  let v1x: f32 = bx-ax;
  let v1y: f32 = by-ay;
  let v2x: f32 = px-ax;
  let v2y: f32 = py-ay;

  let dot00: f32 = (v0x*v0x) + (v0y*v0y);
  let dot01: f32 = (v0x*v1x) + (v0y*v1y);
  let dot02: f32 = (v0x*v2x) + (v0y*v2y);
  let dot11: f32 = (v1x*v1x) + (v1y*v1y);
  let dot12: f32 = (v1x*v2x) + (v1y*v2y);

  let invDenom: f32 = 1.0 / (dot00 * dot11 - dot01 * dot01);

  let u: f32 = (dot11 * dot02 - dot01 * dot12) * invDenom;
  let v: f32 = (dot00 * dot12 - dot01 * dot02) * invDenom;

  let ret:i32 = (u >= 0) && (v >= 0) && (u + v < 1);
  return ret;
}


export function dumb (px: f32,py: f32, ax: f32, ay: f32, bx: f32, by: f32, cx: f32, cy: f32) : i32 {
  return 0;
}
